#!/bin/bash

#Cyberpatriot Scoring Engine: Linux v 0.4
#Tested in Ubuntu 16.04. Somewhat compatible with 14.04 (working
#on making this work fully).
#
#Set up your scoring by changing the values in this file. Turning
#off silentMiss is helpful for debugging. Many of these you can 
#leave blank if you are not scoring them. Once you have this file
#set up, then open a terminal and navigate to the CSEL directory.
#Change the permissions of the install file: chmod 777 install.sh
#and run sudo ./install.sh. This will create the csel file, the 
#index file, and a cron job to update scoring every 2 minutes. 
#After this, you can delete the CSEL directory.

#################################################################
#####---------------------Configuration---------------------#####

index=(/home/husker/Desktop/ScoreReport.html) #Where do you want the score report to be generated? This CANNOT be left blank.
silentMiss=() #y for silent misses, n will tell students generally where points are missing
goodUser=(husker chief starbuck apollo boomer athena helo longshot hotdog racetrack hardball kat crashdown) #10 point penalty for deleting these users
badUser=(numbersix) #10 points for deleting bad users
changePassword=(hotdog boomer) #5 points for changing user password
removeAdmin=(racetrack) #10 points for removing bad admins
secureSudoers=(timestamp_timeout=-1) #8 points for removing things from /etc/sudoers file
disableGuest=(y) #y for 5 points for disabling guest account, leave empty for no scoring
disableAutoLogin=(y) #y for 5 points for disabling auto login, leave empty for no scoring 
disableUserGreeter=(y) #y for 5 points for disabling list of usernames at login gretter, leave empty for no scoring
minPassAge=(3) #set to value of the min password age you want scored. Leave blank for no scoring. 7 pts
maxPassAge=(90) #set to value of the max password age you want scored. Leave blank for no scoring. 7pts
maxLoginTries=(5) #set to value of the max login tries allowed. Leave blank for no scoring
checkPassHist=(12) #set the value to the minimum history acceptable to score (7 points)
checkPassLength=(8) #set to the value of the minimum acceptable password length to score (7 points)
goodProgram=(libpam-cracklib clamav) #10 points for each good program installed
badProgram=(apache2 vino bind9) #10 points for each bad program uninstalled
badFile=(/home/hotdog/Desktop/GIANTJR.mp4 /home/apollo/Documents/mystuff.zip) # 7 points for deleting each bad files
backdoor=(nc) #10 points for removing backdoor. Enter the name of your backdoor (usually nc)
checkHosts=(google) #enter a word from the line that you want removed from hosts file. 7 pts
checkCronTab=(monitor.sh) #enter a word from the line in crontab that you want removed (currently only supports root) 10 pts
checkFirewall=(y) #enter y to check for firewall enabled (ufw only for now) 10 pts
checkKernel=() #enter y to check for kernel update. The script will check the current kernel against the kernel present at ./install.sh 7 pts
forensicsPath=(/home/husker/Desktop/Question1.txt) #where is your forensics question?
forensicsAnswer=("1500") #answer to your forensics question (must be preceded by ANSWER: in your file)

#####---------------------Configuration---------------------#####
#################################################################

imageScore=0 #Start the score at zero
posPoints=0 #Start with zero possible points
release="" #Which version of Ubuntu are we dealing with?
initialKernel=(%KERNEL%) #This will change every time you run ./install.sh