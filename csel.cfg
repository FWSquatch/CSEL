#!/bin/bash

#Cyberpatriot Scoring Engine: Linux v 0.4
#Tested in Ubuntu 16.04. Somewhat compatible with 14.04 (working
#on making this work fully).
#
#Set up your scoring by changing the values in this file. Turning
#off silentMiss is helpful for debugging. Many of these you can 
#leave blank if you are not scoring them. Once you have this file
#set up, then open a terminal and navigate to the CSEL directory.
#Change the permissions of the install file: chmod 777 install.sh
#and run sudo ./install.sh. This will create the csel file, the 
#index file, and a cron job to update scoring every 2 minutes. 
#After this, you can delete the CSEL directory.

#################################################################
#####---------------------Configuration---------------------#####

index=(/home/harry/Desktop/ScoreReport.html) #Where do you want the score report to be generated? This CANNOT be left blank.
silentMiss=(n) #y for silent misses, n will tell students generally where points are missing

goodUser=(harry ron hermione dumbledore) #Assess a penalty for deleting these users
goodUserValue=(-5) #Penalty points for deleting each goodUser? (Use negative number)

badUser=(tom) #Score by deleting these users (add multiple users with a space between each one)
badUserValue=(5) #Points to award for deleting each badUsers.

newUser=(neville) #Score by creating the required users (add multiple users with a space between each one)
newUserValue=(5) #Points for each newUser created.

changePassword=(hagrid) #Change user password (add multiple users with a space between each one)
changePasswordValue=(5) #Points to award for each changePassword

removeAdmin=(ron) #Remove users from sudo group (add multiple users with a space between each one)
removeAdminValue=(5) #Points to award for each removeAdmin

secureSudoers=(ron) #Points for removing things from /etc/sudoers file
secureSudoersValue=(5) #Points to award for secureSudoers

disableGuest=(y) #y to score disabling guest account, leave empty for no scoring
disableGuestValue=(3) #Points for disabeGuest

disableAutoLogin=(y) #y to score disabling auto login, leave empty for no scoring 
disableAutoLoginValue=(3) #Points for disableAutoLogin

disableUserGreeter=(y) #y to score disabling list of usernames at login greeter, leave empty for no scoring
disableUserGreeterValue=(5) #Points for disableUserGreeter

checkStartup=(malware-launcer) #enter a word from the line in rc.local that you want removed
checkStartupValue=(5) #Points for checkStartup

minPassAge=(1) #set to value of the min password age you want scored. (/etc/login.defs) Leave blank for no scoring.
minPassAgeValue=(6) #Points for minPassAge

maxPassAge=(60) #set to value of the max password age you want scored. (/etc/login.defs) Leave blank for no scoring.
maxPassAgeValue=(5) #Points for maxPassAge

maxLoginTries=(5) #set to value of the max login tries allowed. (/etc/login.defs) Leave blank for no scoring
maxLoginTriesValue=(5) #Points for maxLoginTries

checkPassHist=() #set the value to the minimum history acceptable to score
checkPassHistValue=()

checkPassLength=() #set to the value of the minimum acceptable password length to score
checkPassLengthValue=()

goodProgram=(libpam-pwquality clamav) #Score points for each good program installed (add multiple programs with spaces between)
goodProgramValue=(11)

badProgram=(cheese) #Score points for each bad program uninstalled
badProgramValue=(4) 

disableSshRootLogin=(y) #enter y to score for disabling root login in /etc/ssh/sshd_config
disableSshRootLoginValue=(5)

badFile=(/home/harry/Desktop/bad.mp3) #Score points for deleting each bad file from this list
badFileValue=(5)

backdoor=(nc) #Score points for removing backdoor. Enter the name of your backdoor (usually nc)
backdoorValue=(12)

checkHosts=(google) #enter a word from the line that you want removed from hosts file.
checkHostsValue=(5)

badCron=(root index) #The first word needs to be the user crontab to search and the second word should be the word we are looking to remove or comment out.
badCronValue=(15)

checkFirewall=(y) #enter y to check for firewall enabled (ufw only for now)
checkFirewallValue=(5)

checkKernel=() #enter y to check for kernel update. The script will check the current kernel against the kernel present at ./install.sh
checkKernelValue=()

updatePackListsInt=(1) #Set to 1,2,7,or 14 for the # for days between update checks. Set to 0 to score turning off. CP reccomends 1
updatePackListsIntValue=(3)

updateAutoInstall=(1) #Set to 1 for auto install, 0 if you want to score turning off auto-install. CP reccomends 1
updateAutoInstallValue=(3)

avUpdated=() #Set to y to score updating clamav via freshclam															  
avUpdatedValue=()

forensicsPath1=(/home/harry/Desktop/Question1.txt) #where is your forensics question?
forensicsAnswer1=(7842) #answer to your forensics question (must be preceded by ANSWER: in your file)
checkForensicsQuestion1Value=(5)

forensicsPath2=(/home/harry/Desktop/Question2.txt) #where is your forensics question?
forensicsAnswer2=(foo) #answer to your forensics question (must be preceded by ANSWER: in your file)
checkForensicsQuestion2Value=(5)
#Experimental
#These generic modules allow you to choose a file, choose text to look for (or delete), assign a point value, and write a custom success message. They also take # (comments) into account.
fileContainsText1=() #Command has 4 parts: 1-file location 2-text to add or uncomment 3-points to award 4-Success message for score report 
fileContainsText2=() #Command has 4 parts: 1-file location 2-text to add or uncomment 3-points to award 4-Success message for score report 
fileNoLongerContains1=() #Command has 4 parts: 1-file location 2-text to delete or comment 3-points to award 4-Success message for score report
fileNoLongerContains2=() #Command has 4 parts: 1-file location 2-text to delete or comment 3-points to award 4-Success message for score report

groupExists=(gryffindor 6) #Check to see if group exists. Award n points if it does.
userInGroup=(harry gryffindor 10) #Check to see if user is in group. Award n points

#####---------------------Configuration---------------------#####
#################################################################

imageScore=0 #Start the score at zero
posPoints=0 #Start with zero possible points
release="" #Which version of Ubuntu are we dealing with?
#The following will change every time you run ./install.sh
initialKernel=(%KERNEL%) 
installDate=(%INSTALLDATE%)				   
