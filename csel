#!/bin/bash
#Cyberpatriot Scoring Engine: Linux v 0.2
#by Josh Davis
#
#Set up your scoring by changing the values in the Configuration setting
#
#################################################################
#####---------------------Configuration---------------------#####

silentMiss=(n) # y for silent misses, n will tell students generally where points are missing
goodUser=(lknope thaverford rswanson aludgate) #10 point penalty for deleting these users
badUser=(bmacklin) #10 points for deleting bad users
changePassword=(thaverford rswanson) #5 points for changing user password
removeAdmin=(lknope) #10 points for removing bad admins
disableGuest=(y) #y for 5 points for disabling guest account, n for no scoring
goodPrograms=(libpam-cracklib) #10 points for each good program installed
badPrograms=(reaver) #10 points for each bad program uninstalled
badFiles=(/home/thaverford/Music/MyJam.ogg) # 7 points for deleting each bad file
backdoor=() #10 points for removing backdoor. Enter the name of your backdoor (usually nc)
checkHosts=(google) #enter a word from the line that you want removed from hosts file

#####---------------------Configuration---------------------#####
#################################################################
imageScore=0 #Start the score at zero

#Bash text color shortcuts
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

checkForRoot(){
if [ "$EUID" -ne 0 ]
  then echo "csel must be run as root"
  exit
fi
}
drawHead(){
echo ""
echo ""
echo -e "${YELLOW}#######################################################"
echo -e "#       CyberPatriot Linux Scoring Engine v 0.2       #"
echo -e "#######################################################${NC}"
}
drawTail(){
echo "|"
echo -e "${YELLOW}#######################################################${NC}"
echo ""
echo ""
echo -e "${CYAN}Your score is:" $imageScore ${NC}
echo ""
echo ""
}
goodUser(){
for i in "${goodUser[@]}" #Penalize for deleting good users
do
	if getent passwd $i > /dev/null 2>&1; then
		: #Do Nothing
	else
		echo -e "| ${RED}User" $i "deleted (-10 points)${NC}"
			imageScore=$[$imageScore-10]
	fi
done
}
badUser(){
for i in "${badUser[@]}" #Check for bad users
do
	if getent passwd $i > /dev/null 2>&1; then
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Bad User not Deleted${NC}";fi
	else
		echo -e "| ${GREEN}User" $i "deleted. (10 points)${NC}"
		imageScore=$[$imageScore+10]
	fi
done
}
changePassword(){
if [ -z "$changePassword" ] #Check certain users for blank passwords
then
	: #Do nothing
else
	for i in "${changePassword[@]}" #Check for blank passwords
	do 
		if [[ $(sudo getent shadow | grep $i\:\:) ]]
		then
			if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Password Issue${NC}";fi
		else
			echo -e "| ${GREEN}User" $i "password has been changed (5 points)${NC}"
			imageScore=$[$imageScore+5]
		fi
	done
fi
}
removeAdmin(){
for i in "${removeAdmin[@]}" #Check certain uses to see if they have been removed from admin
do
	if [[ $(getent group sudo | grep $i) ]]  
	then
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Admin Issue${NC}";fi	
	else
		echo -e "| ${GREEN}User" $i "removed from Admin group (10 points)${NC}"	
		imageScore=$[$imageScore+10]
	fi
done
}
disableGuest(){
if [ "$disableGuest" == "y" ]
then
	if [[ $(cat /etc/lightdm/lightdm.conf | grep allow-guest=false) ]]
	then
		echo -e "| ${GREEN}Guest account disabled (5 points)${NC}"	
		imageScore=$[$imageScore+5]
	else
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Guest Account Issues${NC}";fi
	fi
else
	: #Do nothing
fi
}
goodProgram(){
for i in "${goodPrograms[@]}" #Check for good programs
do
	if apt-cache policy $i | grep "Installed: (none)" > /dev/null
	then
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Good Program(s) not installed${NC}";fi
	else
		echo -e "| ${GREEN}Program" $i "installed. (10 points)${NC}"		
		imageScore=$[$imageScore+10]
	fi
done
}
badProgram(){
for i in "${badPrograms[@]}" #Check for good programs
do
	if apt-cache policy $i | grep "Installed: (none)" > /dev/null
	then
		echo -e "| ${GREEN}Program" $i "uninstalled. (10 points)${NC}"		
		imageScore=$[$imageScore+10]
	else
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Bad program(s) installed${NC}";fi
	fi
done
}
badFile(){
for i in "${badFiles[@]}" #Check for bad files
do 
	if [ -e "$i" ]
	then
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Bad File(s)${NC}";fi
	else
		echo -e "|" ${GREEN}$i "deleted (10 points)${NC}"
		imageScore=$[$imageScore+10]
	fi
done
}

backdoor(){
if [ "$backdoor" == "" ]; then :; else
if pgrep -x nc > /dev/null
then
	if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Backdoor not Removed${NC}";fi
else
	echo -e "| ${GREEN}"$backdoor" backdoor is not running (10 points)${NC}"
	imageScore=$[$imageScore+10]		
fi
fi
}

checkHosts(){
if [[ $(cat /etc/hosts | grep ${checkHosts}) ]]
	then
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS hosts file issue${NC}";fi
	else
		echo -e "| ${GREEN}Hosts file corrected (7 points)${NC}"
		imageScore=$[$imageScore+7]
fi
}
#---------------------Categories---------------------#

userManagement(){
echo "|"
echo "| -----USER MANAGEMENT------"
goodUser
badUser
changePassword
removeAdmin
disableGuest
}

programManagement(){
echo "|"
echo "| -----PROGRAMS------"
goodProgram
badProgram
}

fileManagement(){
echo "|"
echo "| -----FILES------"
badFile
}

miscPoints(){
echo "|"
echo "| -----MISCELLANEOUS------"
backdoor
checkHosts
}

#---------------------Main Loop---------------------#
checkForRoot
drawHead
userManagement
programManagement
fileManagement
miscPoints
drawTail