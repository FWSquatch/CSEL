#!/bin/bash
#CSEL Cyberpatriot Scoring Engine: Linux
imageScore=0
silentMiss="y" # y for silent misses, n will tell students where points are missing
newUser=(kelly) #Users to be added to the system 10 points each
goodUser=(hannibal face murchoch babaracus) #10 points each
blankPassword=(face murchoch) #5 points each
badUser=(decker) #10 points each
goodServices=(ssh) #7 points each
badServices=(apache2) #7 points each
backdoor=(nc) # 10 points each
badFiles=(/home/babaracus/media.mov /home/face/Music/JohnnyCash.mp3 /media/.startlisten.sh) #10 points
kernelName="4.4.0-89-generic"
badPrograms=(john aircrack-ng)
goodPrograms=(ufw)
forensicAnswer='<ANSWER>: goldfordaysyo' #10 points
changePassword=(face hannibal)
initialImageDate="09/06/2017"

#Bash text color shortcuts
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

drawHead(){
echo ""
echo ""
echo -e "${YELLOW}#######################################################"
echo -e "#       CyberPatriot Linux Scoring Engine v 0.1       #"
echo -e "#######################################################${NC}"
}
drawTail(){
echo "|"
echo -e "${YELLOW}#######################################################${NC}"
echo ""
echo ""
echo -e "${CYAN}Your score is:" $imageScore ${NC}
echo ""
echo ""
}
userManagement(){
echo "|"
echo "| -----USER MANAGEMENT------"

for i in "${newUser[@]}" #Check for new users
do
	if getent passwd $i > /dev/null 2>&1; then
		echo -e "| ${GREEN}User" $i "exists. (10 points)${NC}"
		imageScore=$[$imageScore+10]
		else
			if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS New User${NC}";fi
	fi
done

for i in "${goodUser[@]}" #Penalize for deleting good users
do
	if getent passwd $i > /dev/null 2>&1; then
		: #Do Nothing
	else
		echo -e "| ${RED}User" $i "deleted (-10 points){NC}"
			imageScore=$[$imageScore-10]
	fi
done

if [ -z "$blankPassword" ] #Check certain users for blank passwords
then
	: #Do nothing
else
	for i in "${blankPassword[@]}" #Check for blank passwords
	do 
		if [[ $(sudo getent shadow | grep $i\:\:) ]]
		then
			if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Password Issue${NC}";fi
		else
			echo -e "| ${GREEN}User" $i "no longer has a blank password (5 points)${NC}"
			imageScore=$[$imageScore+5]
		fi
	done
fi
 
for j in "${badUser[@]}" #Check for bad users
do
	if getent passwd $j > /dev/null 2>&1; then
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Bad User not Deleted${NC}";fi
	else
		echo -e "| ${GREEN}User" $j "deleted. (10 points)${NC}"
		imageScore=$[$imageScore+10]
	fi
done
}
checkServices(){
echo "|"
echo "| -----SERVICE MANAGEMENT------"

for i in "${goodServices[@]}" #Check for good services
do
	serviceRunning=$(systemctl is-active $i | grep -c inactive)
	if [ "$serviceRunning" -eq "0" ]
	then
		echo -e "| ${GREEN}"$i" is running (7 points)${NC}"
		imageScore=$[$imageScore+7]
	else
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Good Service not Running";fi
	fi
done

for j in "${badServices[@]}" #Check for bad services
do
	serviceRunning=$(systemctl is-active $j | grep -c inactive)
	if [ "$serviceRunning" -eq "0" ]
	then
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Bad Service not Removed${NC}";fi
		
	else
		echo -e "| ${GREEN}"$j" is not running (7 points)${NC}"
		imageScore=$[$imageScore+7]
	fi
	if pgrep -x $backdoor > /dev/null
	then
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Backdoor not Removed${NC}";fi
	else
		echo -e "| ${GREEN}"$backdoor" backdoor is not running (10 points)${NC}"
		imageScore=$[$imageScore+10]		
	fi

done
}
checkBadFiles(){
echo "|"
echo "| -----FILE MANAGEMENT------"

for i in "${badFiles[@]}" #Check for bad files
do 
	if [ -e "$i" ]
	then
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Bad File(s)${NC}";fi
	else
		echo -e "|" ${GREEN}$i "deleted (10 points)${NC}"
		imageScore=$[$imageScore+10]
	fi
done
}
checkUpdate(){
echo "|"
echo "| -----UPDATES------"
	if uname -r | grep -q $kernelName
	then
		echo -e "| ${GREEN}Linux Kernel updates applied (10 points)${NC}"
		imageScore=$[$imageScore+10]
	else
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Update(s)${NC}";fi
	fi
}
checkGoodPrograms(){
echo "|"
echo "| -----PROGRAMS------"
for j in "${goodPrograms[@]}" #Check for good programs
do
	if apt-cache policy $j | grep "Installed: (none)" > /dev/null
	then
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Update(s)${NC}";fi
	else
		echo -e "| ${GREEN}Program" $j "installed. (10 points)${NC}"		
		imageScore=$[$imageScore+10]
	fi
done
}
checkBadPrograms(){
echo "|"
echo "| -----PROGRAMS------"
for j in "${badPrograms[@]}" #Check for bad programs
do
	if apt-cache policy $j | grep "Installed: (none)" > /dev/null
	then
		echo -e "| ${GREEN}Program" $j "installed. (10 points)${NC}"		
		imageScore=$[$imageScore+10]
	else
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Update(s)${NC}";fi
	fi
done
}
checkForensicQuestion(){
echo "|"
echo "| -----FORENSIC QUESTION------"
if grep -q "$forensicAnswer" /home/hannibal/Desktop/Question1.txt
then 
    echo -e "| ${GREEN}Forensic Question answered (10 points)${NC}"
    imageScore=$[$imageScore+10]
else
    if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Forensic Question${NC}";fi
fi
}

checkPasswordAge(){
for j in "${changePassword[@]}" #Check for changed passwords
do
	k=$(passwd -S $j | cut -d' ' -f3)
	if [ $k  != $initialImageDate ]
	then
		echo -e "| "${GREEN}"User "$j "password has been changed. (5 points)${NC}"
		imageScore=$[$imageScore+5]
	else
		if [ "$silentMiss" == "y" ]; then :; else echo -e "| ${RED}MISS Password Change${NC}";fi
	fi
done
}
checkForRoot(){
if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi
}

#Main body
checkForRoot
drawHead
userManagement
checkPasswordAge
checkServices
checkBadFiles
#checkUpdate
checkBadPrograms
checkGoodPrograms
checkForensicQuestion
drawTail